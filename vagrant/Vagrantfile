# -*- mode: ruby -*-
# vi: set ft=ruby :

OS = 'ubuntu/bionic64'
SERVERS = [
  {
    name: 'master-1',
    ip: '192.168.5.11',
    type: 'master',
    cpus: 2,
    memory: 2048,
    forward_port: 2711
  },
  {
    name: "worker-1",
    ip: '192.168.5.12',
    type: 'node',
    cpus: 1,
    memory: 2048,
    forward_port: 2712
  },
  # {
  #   name: 'worker-2',
  #   ip: '192.168.5.13',
  #   type: 'node',
  #   cpus: 1,
  #   memory: 2048,
  #   forward_port: 2713
  # },
  # {
  #   name: 'lb',
  #   ip: '192.168.5.30',
  #   type: 'load-balancer',
  #   cpus: 1,
  #   memory: 1028,
  #   forward_port: 2730
  # },
]

$HOST_CONFIG = <<-SCRIPT
ADDRESS="$(ip -4 addr show enp0s8 | grep "inet" | head -1 |awk '{print $2}' | cut -d/ -f1)"
sed -e "s/^.*${HOSTNAME}.*/${ADDRESS} ${HOSTNAME} ${HOSTNAME}.local/" -i /etc/hosts

cat >> /etc/hosts <<EOF
192.168.5.11  master-1
192.168.5.12  worker-1
192.168.5.13  worker-2
192.168.5.30  lb
EOF
SCRIPT

$CONFIGURE_BOX = <<-SCRIPT
## DOCKER
apt-get update && apt-get install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
add-apt-repository "deb https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"
apt-get update && apt-get install -y docker-ce=$(apt-cache madison docker-ce | grep 18.06 | head -1 | awk '{print $3}')

## DNS
sed -i -e 's/#DNS=/DNS=8.8.8.8/' /etc/systemd/resolved.conf
service systemd-resolved restart

## Bridge nf traffic
modprobe br_netfilter
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = OS
  config.vm.box_check_update = false

  SERVERS.each do |server|
    config.vm.define server[:name] do |node|
      # Name shown in the GUI
      node.vm.provider "virtualbox" do |vb|
          vb.name = server[:name]
          vb.memory = server[:memory]
          vb.cpus = server[:cpus]
      end
      node.vm.hostname = server[:name]
      node.vm.network :private_network, ip: server[:ip]
      node.vm.network "forwarded_port", guest: 22, host: "#{server[:forward_port]}"

      config.vm.provision "shell", inline: $HOST_CONFIG
      config.vm.provision "shell", inline: $CONFIGURE_BOX

      # if opts[:type] == "master"
      #     config.vm.provision "shell", inline: $configureMaster
      # else
      #     config.vm.provision "shell", inline: $configureNode
      # end
    end
  end
end
